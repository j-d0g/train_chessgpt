step 376000: train loss 0.3063, val loss 0.3077
saving checkpoint to out-stockfish-small-8
Traceback (most recent call last):
  File "/app/train.py", line 310, in <module>
    logits, loss = model(X, Y)
  File "/opt/conda/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/opt/conda/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/app/model.py", line 182, in forward
    x = self.transformer.ln_f(x)
  File "/opt/conda/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/opt/conda/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/app/model.py", line 27, in forward
    return F.layer_norm(input, self.weight.shape, self.weight, self.bias, 1e-5)
  File "/opt/conda/lib/python3.10/site-packages/torch/nn/functional.py", line 2543, in layer_norm
    return torch.layer_norm(input, normalized_shape, weight, bias, eps, torch.backends.cudnn.enabled)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 128.00 MiB. GPU 1 has a total capacty of 23.55 GiB of which 46.81 MiB is free. Including non-PyTorch memory, this process has 0 bytes memory in use. Of the allocated memory 9.83 GiB is allocated by PyTorch, and 113.18 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
